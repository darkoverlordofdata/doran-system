namespace System.Xml
{
    using System.Collections.Generic;

    /***************************************************************************************************************
    Stack: A simple stack class, used for verifying document structure.
    *****************************************************************************************************************/
    internal class Stack : Object
    {
        private string[] m_arr;
        private int m_sp;
        /*******************************************************************************************************************
        function:   Stack

        Author:   Scott Severtson

        Description:
            Constructor of the Stack Object
        *********************************************************************************************************************/
        public Stack() 
        {
            m_arr = new string[8];
            m_sp = -1;
        }  // end function Stack


        /*******************************************************************************************************************
        function:   clear

        Author:   Scott Severtson
        *********************************************************************************************************************/
        public void Clear() 
        {
            m_arr = new string[8];
            m_sp = -1;
        }  // end function clear


        /*******************************************************************************************************************
        function:   count

        Author:   Scott Severtson
        *********************************************************************************************************************/
        public int Count() 
        {
            return int.max(0, m_sp+1);
        }  // end function count


        /*******************************************************************************************************************
        function:   destroy

        Author:   Scott Severtson
        *********************************************************************************************************************/
        public void Destroy() 
        {
            m_arr = null;
            m_sp = -1;
        }   // end function destroy


        /*******************************************************************************************************************
        function:   peek

        Author:   Scott Severtson
        *********************************************************************************************************************/
        public string Peek() 
        {
            if(m_sp < 0) {
                return null;
            }
            return m_arr[m_sp];
        }  // end function peek


        /*******************************************************************************************************************
        function:   pop

        Author:   Scott Severtson
        *********************************************************************************************************************/
        public string Pop() 
        {
            if(m_sp < 0) {
                return null;
            }

            var o = m_arr[m_sp--];
            return o;

        }  // end function pop


        /*******************************************************************************************************************
        function:   push

        Author:   Scott Severtson
        *********************************************************************************************************************/
        public void Push(string str) {

            if (m_sp >= m_arr.length)
                m_arr.resize(m_arr.length*2);
            m_arr[++m_sp] = str;

        }  // end function push
    }
}